Consider a vector W and a scalar function L(W).
The problem is to find the value Wₘ such that L(Wₘ) has the lowest possible value.

If we assume there is only a single minimum (and no (other) local
minima) then this point will be the only point where ∇_W L = 0.

For example, let W be a 1-dimensional vector: W = [w], and
let L be defined as:

  L(w) = a + b w + c w²,

then

  ∇_W L = [ ∂L/∂w ] = dL/dw = b + 2c w

The value of w at which L has a minimum is therefore given
by b + 2c wₘ = 0, provided that c > 0 of course.
In other words,

  wₘ = -b / 2c

where the minimum value is

  L(wₘ) = a + b (-b / 2c) + c (-b / 2c)² = a - b² / 4c

Let the initial value of w that we begin with be w₀.
Then we have the initial values:

  L(w₀) = a + b w₀ + c w₀²
  L'(w₀) = b + 2c w₀

Let the learning rate α be a small real value (rather arbitrary
initially). Such that the next value of w is

  w₁ = w₀ - α ∂L/∂w = w₀ - α (b + 2c w₀) = -α b + (1 - 2α c) w₀

which gives the next values for L and L':

  L(w₁) = a + b w₁ + c w₁²
  L'(w₁) = b + 2c w₁

Since we know that the first derivative is a linear function:

   |              /
   |             +  -- L'(w₀)
   |            /|
   |           / |
   |          +  |  -- L'(w₁)
   |         /|  |
   |        / |  |
   |       /  |  |
   |      /   |  |
   |     /    |  |
   +----.-----.--.------
  O     wₘ    w₁ w₀


  L' = β (w - wₘ)

  L'(w₁) = β (w₁ - wₘ)
  L'(w₀) = β (w₀ - wₘ)
---------------------- -
  L'(w₁) - L'(w₀) = β (w₁ - w₀)  -->  β = (L'(w₁) - L'(w₀)) / (w₁ - w₀)

  wₘ = w₁ - L'(w₁) / β = w₁ - (w₁ - w₀) / (L'(w₁) - L'(w₀)) L'(w₁)

or maybe,

  w₁ L'(w₀) = β (w₀w₁ - w₁wₘ)
  w₀ L'(w₁) = β (w₀w₁ - w₀wₘ)
----------------------------- -
  w₁ L'(w₀) - w₀ L'(w₁) = -(w₁ - w₀)wₘ -->
  wₘ = (w₀ L'(w₁) - w₁ L'(w₀)) / (w₁ - w₀)

---

Next, consider a fourth degree polynomial:

  L(w) = a + b w + c w² + d w³ + e w⁴
  L'(w) = b + 2c w + 3d w² + 4e w³

After measuring L and L' for three different values of w
we can make an estimate of the vector P = [b c d e]ᵀ.

Having determined the values of L and L' for w₀, w₁ and w₂,

  L'(w₂)        =         b +       2w₂ c +      3w₂² d +      4w₂³ e
  L'(w₁)        =         b +       2w₁ c +      3w₁² d +      4w₁³ e
  L'(w₀)        =         b +       2w₀ c +      3w₀² d +      4w₀³ e
  L(w₂) - L(w₁) = (w₂-w₁) b + (w₂²-w₁²) c + (w₂³-w₁³) d + (w₂⁴-w₁⁴) e

which can be written in matrix form, and then we can solve for P:
                                          -1
  ⎡b⎤   ⎡  1      2w₂      3w₂²     4w₂³ ⎤   ⎡    L'(w₂)   ⎤
  ⎢c⎥   ⎢  1      2w₁      3w₁²     4w₁³ ⎥   ⎢    L'(w₁)   ⎥
  ⎢d⎥ = ⎢  1      2w₀      3w₀²     4w₀³ ⎥   ⎢    L'(w₀)   ⎥
  ⎣e⎦   ⎣w₂-w₁  w₂²-w₁²  w₂³-w₁³  w₂⁴-w₁⁴⎦   ⎣L(w₂) - L(w₁)⎦

---

For the backtracking, I'd like an estimate on whether or not it is
likely that the function L(w) has a minimum between w₀ and w₁.

The following values are known: L(w₀), L'(w₀), L(w₁) and L'(w₁).
In fact we also know the second derivative at w₀ more or less.

Namely, a parabola P(w) was calculated as approximation that goes through (w₀, L(w₀)):

    P(w) = a + b w + c w²

Thus,

    P(w₀)   = a + b w₀ +  c w₀² = L(w₀)
    P'(w₀)  =     b    + 2c w₀  = L'(w₀)
    P''(w₀) =            2c     = L''(w₀)

where a, b and c are now known.

This predicts a vertex at w₁ = -b / 2c

Lets now fit a cubic polynomial through (w₀, L(w₀)) and (w₁, L(w₁))
with respectively the derivative equal to L'(w₀) and L'(w₁).

    Q(w) = d + e w + f w² + g w³

such that

    Q(w₀) = d + e w₀ + f w₀² + g w₀³ = L(w₀)
    Q(w₁) = d + e w₁ + f w₁² + g w₁³ = L(w₁)

or, subtracted

    Q(w₀) - Q(w₁) = (w₀ - w₁) e + (w₀² - w₁²) f + (w₀³ - w₁³) g = L(w₀) - L(w₁)         (1)

Furthermore,

    Q'(w₀)  = e + 2f w₀ + 3g w₀² = L'(w₀)                                               (2)
    Q'(w₁)  = e + 2f w₁ + 3g w₁² = L'(w₁)                                               (3)
    Q''(w₀) =     2f    + 6g w₀  = L''(w₀) = 2c                                         (4)

Since this is an overdetermined system, we'll ignore (3).

Multiply (2) with (w₀ - w₁) to get:

    (w₀ - w₁) e + 2 (w₀ - w₁) w₀ f + 3 (w₀ - w₁) w₀² g = (w₀ - w₁) L'(w₀)

Subtract it from (1)

    (w₀² - w₁² - 2 (w₀ - w₁) w₀) f + (w₀³ - w₁³ - 3 (w₀ - w₁) w₀²) g = L(w₀) - L(w₁) - (w₀ - w₁) L'(w₀)

w₀² - w₁² - 2 (w₀ - w₁) w₀ = - w₀² - w₁² + 2 w₀w₁ = -(w₀² - 2 w₀w₁ + w₁²) = -(w₀ - w₁)²
w₀³ - w₁³ - 3 (w₀ - w₁) w₀² = (w₀ - w₁)² (-2 w₀ - w₁)

    -(w₀ - w₁)² f + (w₀ - w₁)² (-2 w₀ - w₁) g = L(w₀) - L(w₁) - (w₀ - w₁) L'(w₀)        (5)
  =  (w₀ - w₁)² ((-2 w₀ - w₁) g - f)


From (4) follows that

    f = c - 3g w₀

Fill this in into (5) to get

    (w₀ - w₁)² ((-2 w₀ - w₁) g - (c - 3g w₀)) = (w₀ - w₁)² ((w₀ - w₁) g - c) = L(w₀) - L(w₁) - (w₀ - w₁) L'(w₀)


    g = (L(w₀) - L(w₁))/(w₀ - w₁)³ - L'(w₀) / (w₀ - w₁)² + c / (w₀ - w₁)


And thus

         L(w₀) - L(w₁) - (w₀ - w₁) L'(w₀) + (w₀ - w₁)² c
    g =  -----------------------------------------------
                         (w₀ - w₁)³

Finally, from (2) follows

    e = L'(w₀) - 2f w₀ - 3g w₀²

It can be shown that when L(w₁) = P(w₁), then Q(w) = P(w); namely substituting L(w₁) = a - b² / 4c
gives g = 0, f = c, e = b and d = a.

To check if there is a minimum between w₀ and w₁, and where,
we set Q'(w) = e + 2f w + 3g w² = 0, giving the following solutions:

        -f +/- sqrt(f² - 3ge)
    w = ---------------------
                 3g

Note that when g is close to 0, we can approximate this as:

        -f +/- sqrt(f² - 2 f 3ge/2f + (3ge/2f)²)   -f +/- sqrt((f - 3ge/2f)²)   -f +/- |f - 3ge/2f|
    w ~ ---------------------------------------- = -------------------------- = -------------------
                        3g                                     3g                       3g

Since f is close to c, which is positive because we're talking about a minium here,
f is positive and we must pick the + sign or else this value goes to infinity.
In other words:

        -f + (f - 3ge/2f)
    w ~ ----------------- = -e / 2f ~ -b / 2c = w₁
               3g
